-- Create points table
CREATE TABLE IF NOT EXISTS STUDENT_POINTS (
    POINT_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_IDNO VARCHAR(20) NOT NULL,
    POINTS INT NOT NULL DEFAULT 0,
    TOTAL_POINTS_EARNED INT NOT NULL DEFAULT 0,
    TOTAL_POINTS_SPENT INT NOT NULL DEFAULT 0,
    LAST_UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_IDNO) REFERENCES USERS(IDNO) ON DELETE CASCADE
);

-- Create rewards table
CREATE TABLE IF NOT EXISTS REWARDS (
    REWARD_ID INT AUTO_INCREMENT PRIMARY KEY,
    REWARD_NAME VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    POINTS_REQUIRED INT NOT NULL,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create student rewards table (for tracking redeemed rewards)
CREATE TABLE IF NOT EXISTS STUDENT_REWARDS (
    REDEMPTION_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_IDNO VARCHAR(20) NOT NULL,
    REWARD_ID INT NOT NULL,
    REDEEMED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    POINTS_SPENT INT NOT NULL,
    FOREIGN KEY (USER_IDNO) REFERENCES USERS(IDNO) ON DELETE CASCADE,
    FOREIGN KEY (REWARD_ID) REFERENCES REWARDS(REWARD_ID) ON DELETE CASCADE
);

-- Add trigger to update points when sit-in is completed
DELIMITER //
CREATE TRIGGER after_sitin_complete
AFTER UPDATE ON SIT_IN_RECORDS
FOR EACH ROW
BEGIN
    IF NEW.SESSION = 'ENDED' AND OLD.SESSION != 'ENDED' THEN
        -- Check if student already has points record
        IF EXISTS (SELECT 1 FROM STUDENT_POINTS WHERE USER_IDNO = NEW.USER_IDNO) THEN
            -- Update existing points
            UPDATE STUDENT_POINTS 
            SET POINTS = POINTS + 3,
                TOTAL_POINTS_EARNED = TOTAL_POINTS_EARNED + 3
            WHERE USER_IDNO = NEW.USER_IDNO;
        ELSE
            -- Create new points record
            INSERT INTO STUDENT_POINTS (USER_IDNO, POINTS, TOTAL_POINTS_EARNED)
            VALUES (NEW.USER_IDNO, 3, 3);
        END IF;
    END IF;
END//
DELIMITER ;

-- Insert some default rewards
INSERT INTO REWARDS (REWARD_NAME, DESCRIPTION, POINTS_REQUIRED) VALUES
('Extra Lab Time', 'Get 1 hour of extra lab time', 30),
('Priority Access', 'Get priority access to labs for a week', 50),
('Extended Session', 'Get 2 hours of extended lab session', 45),
('VIP Status', 'Get VIP status with special privileges for a month', 100); 