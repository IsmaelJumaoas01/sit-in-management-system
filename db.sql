-- USERS table: Stores student, staff, and admin details
CREATE TABLE USERS (
    IDNO VARCHAR(50) NOT NULL PRIMARY KEY,
    LASTNAME VARCHAR(100) DEFAULT NULL,
    FIRSTNAME VARCHAR(100) DEFAULT NULL,
    MIDDLENAME VARCHAR(1) DEFAULT NULL,
    COURSE VARCHAR(100) DEFAULT NULL,
    YEAR VARCHAR(50) DEFAULT NULL,
    EMAIL VARCHAR(100) UNIQUE DEFAULT NULL,
    PASSWORD VARCHAR(255) DEFAULT NULL,
    USER_TYPE ENUM('STUDENT', 'STAFF', 'ADMIN') NOT NULL
);

-- LABORATORIES table: Stores details of each lab
CREATE TABLE LABORATORIES (
    LAB_ID INT AUTO_INCREMENT PRIMARY KEY,
    LAB_NAME VARCHAR(100) NOT NULL,
    TOTAL_COMPUTERS INT NOT NULL DEFAULT 50
);

-- COMPUTERS table: Tracks each computer in a lab
CREATE TABLE COMPUTERS (
    COMPUTER_ID INT AUTO_INCREMENT PRIMARY KEY,
    LAB_ID INT NOT NULL,
    STATUS ENUM('AVAILABLE', 'OCCUPIED') NOT NULL DEFAULT 'AVAILABLE',
    FOREIGN KEY (LAB_ID) REFERENCES LABORATORIES(LAB_ID) ON DELETE CASCADE
);

-- SUBJECTS table: Stores subjects that can be scheduled in labs
CREATE TABLE SUBJECTS (
    SUBJECT_ID INT AUTO_INCREMENT PRIMARY KEY,
    SUBJECT_NAME VARCHAR(150) NOT NULL UNIQUE,
    DESCRIPTION TEXT DEFAULT NULL
);

-- SEMESTER_SCHEDULES table: Assigns subjects to a semester's lab schedule
CREATE TABLE SEMESTER_SCHEDULES (
    SCHEDULE_ID INT AUTO_INCREMENT PRIMARY KEY,
    LAB_ID INT NOT NULL,
    SUBJECT_ID INT NOT NULL,
    INSTRUCTOR_IDNO VARCHAR(50) NOT NULL,  -- Reference to USERS (Admin/Staff)
    START_TIME TIME NOT NULL,
    END_TIME TIME NOT NULL,
    DAY ENUM('MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT') NOT NULL,
    FOREIGN KEY (LAB_ID) REFERENCES LABORATORIES(LAB_ID) ON DELETE CASCADE,
    FOREIGN KEY (SUBJECT_ID) REFERENCES SUBJECTS(SUBJECT_ID) ON DELETE CASCADE,
    FOREIGN KEY (INSTRUCTOR_IDNO) REFERENCES USERS(IDNO) ON DELETE CASCADE
);

-- SIT_IN_RECORDS table: Stores sit-in requests by students
CREATE TABLE SIT_IN_RECORDS (
    RECORD_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_IDNO VARCHAR(50) NOT NULL,  -- Reference to USERS.IDNO
    LAB_ID INT NOT NULL,
    COMPUTER_ID INT NOT NULL,
    DATE DATE NOT NULL,
    STATUS ENUM('PENDING', 'APPROVED', 'DENIED') NOT NULL DEFAULT 'PENDING',
    FOREIGN KEY (USER_IDNO) REFERENCES USERS(IDNO) ON DELETE CASCADE,
    FOREIGN KEY (LAB_ID) REFERENCES LABORATORIES(LAB_ID) ON DELETE CASCADE,
    FOREIGN KEY (COMPUTER_ID) REFERENCES COMPUTERS(COMPUTER_ID) ON DELETE CASCADE
);

-- SIT_IN_LIMITS table: Tracks the number of sit-ins per student (Max 30)
CREATE TABLE SIT_IN_LIMITS (
    USER_IDNO VARCHAR(50) PRIMARY KEY,  -- Reference to USERS.IDNO
    SIT_IN_COUNT INT NOT NULL DEFAULT 0,
    FOREIGN KEY (USER_IDNO) REFERENCES USERS(IDNO) ON DELETE CASCADE
);

-- LAB_AVAILABILITY view: Determines if a lab is occupied at a specific time
CREATE VIEW LAB_AVAILABILITY AS
SELECT 
    LAB_ID, DAY, START_TIME, END_TIME,
    CASE 
        WHEN COUNT(SCHEDULE_ID) > 0 THEN 'OCCUPIED'
        ELSE 'VACANT'
    END AS STATUS
FROM SEMESTER_SCHEDULES
GROUP BY LAB_ID, DAY, START_TIME, END_TIME;
